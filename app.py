import streamlit as st
import pandas as pd
import sqlite3
import os

DB_FILE = "learny.db"

def check_db_exists():
    """V√©rifie si le fichier de la base de donn√©es existe."""
    return os.path.exists(DB_FILE)

def search_videos(search_term):
    """Recherche des vid√©os dans la base de donn√©es locale."""
    conn = sqlite3.connect(DB_FILE)
    query = f"SELECT * FROM videos WHERE title LIKE ? OR query_term LIKE ?"
    search_pattern = f"%{search_term}%"
    
    df = pd.read_sql_query(query, conn, params=(search_pattern, search_pattern))
    conn.close()
    return df

# --- Interface Utilisateur ---
st.set_page_config(page_title="Learny", layout="wide")

# Affiche le logo dans la barre lat√©rale
st.sidebar.image("assets/learny.png")
st.sidebar.title("Learny üéì")

st.header("Ton Moteur de Contenu √âducatif")

if not check_db_exists():
    st.warning("La base de donn√©es n'est pas encore pr√™te. Il faut la g√©n√©rer.")
    st.info("Le propri√©taire du projet doit lancer l'action 'Ingest YouTube Data' sur GitHub pour cr√©er la base de donn√©es initiale.")
else:
    search_query = st.text_input("Que veux-tu apprendre aujourd'hui ?", placeholder="Python, SQL, Data Science...")

    if search_query:
        results_df = search_videos(search_query)
        
        if not results_df.empty:
            st.success(f"{len(results_df)} ressources trouv√©es pour '{search_query}'")
            
            for index, row in results_df.iterrows():
                st.divider()
                col1, col2 = st.columns([1, 4])
                with col1:
                    st.image(row['thumbnail_url'])
                with col2:
                    st.subheader(row['title'])
                    st.caption(f"Cha√Æne : {row['channel_title']}")
                    st.link_button("Voir la vid√©o sur YouTube", f"https://www.youtube.com/watch?v={row['video_id']}")
        else:
            st.info(f"Aucune ressource trouv√©e pour '{search_query}' dans notre base de donn√©es.")